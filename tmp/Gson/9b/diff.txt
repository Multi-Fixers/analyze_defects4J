@@ -159,6 +159,13 @@
     return this;
   }
 
+  @Override public JsonWriter value(Boolean value) throws IOException {
+    if (value == null) {
+      return nullValue();
+    }
+    put(new JsonPrimitive(value));
+    return this;
+  }
 
   @Override public JsonWriter value(double value) throws IOException {
     if (!isLenient() && (Double.isNaN(value) || Double.isInfinite(value))) {
diff -ur /home/kulindu.20/analyze_defects4J/tmp/Gson/9b/buggy/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java /home/kulindu.20/analyze_defects4J/tmp/Gson/9b/fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
@@ -162,10 +162,6 @@
     }
     @Override
     public void write(JsonWriter out, Boolean value) throws IOException {
-      if (value == null) {
-        out.nullValue();
-        return;
-      }
       out.value(value);
     }
   };
diff -ur /home/kulindu.20/analyze_defects4J/tmp/Gson/9b/buggy/gson/src/main/java/com/google/gson/stream/JsonWriter.java /home/kulindu.20/analyze_defects4J/tmp/Gson/9b/fixed/gson/src/main/java/com/google/gson/stream/JsonWriter.java
@@ -473,6 +473,15 @@
    *
    * @return this writer.
    */
+  public JsonWriter value(Boolean value) throws IOException {
+    if (value == null) {
+      return nullValue();
+    }
+    writeDeferredName();
+    beforeValue();
+    out.write(value ? "true" : "false");
+    return this;
+  }
 
   /**
    * Encodes {@code value}.
